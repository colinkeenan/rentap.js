html(lang='en')
  head
    title Rental Application
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='shortcut icon' href='/images/icon.png')
    link(rel='stylesheet' media='print' href='/stylesheets/rentap-print.css')
    link(rel='stylesheet' media='screen' href='/stylesheets/rentap-screen.css')
  body

    //- action='' in the form definitions below means use the current url for the POST action
    //- 
    //- However, I've discovered buttons (which are of type submit by default) can have
    //- formaction='/path' where the path is specified for that button and that will overide
    //- the action=''. Same can be done with method, a button can be set to method=GET
    //- to overide the form method of POST. That's how there will be multiple buttons 
    //- on each form as it was in the rentap firefox extension

    //- Unlike rentap firefox extension, trying to break this into 3 forms, header
    //- rentap, and rentapsearch (navigation controls form)
    form#headerform(method=POST action=url + '/header/update') 
      //- the model has access to headers table as headers[{StreetAddress, CityStateZip, Title, Name}, etc.]
      //- headerform expects the following variables from get headername, (header will be undefined for get new header) 
      
      //- header: {StreetAddress, CityStateZip, Title, Name}, headerNames[name1,...], 

      //- where header from headers is chosen by tbl.headerName = headers.Name
      table#rentapheader 
        tr 
          td 
            img(src='/images/icon.png')

          td 
            input#rentaladdress(type='text' value=(undefined===header ? 'enter rental address' : header.StreetAddress)) 
            input#rentalcitystzip(type='text' value=(undefined===header ? 'enter city, state, zip' : header.CityStateZip))

          td#tdrtitle 
            input#mode.inlineshort(type='text' form='rentapform' readonly value=(undefined===mode ? 'new' : mode)) 
            input#rtitle(type='text' value=(undefined===header ? 'enter title' : header.Title))

          td 
            //- below is part of rentapform so gets ap.rowid and rentap {... dateApplied, dateGuested, dateRented, headerName} 
            //- when there's a get for rentapform
            label.smalllabelinput(for='authdate') Applied 
            input#authdate(type='text' form='rentapform' value=(undefined===ap ? '' : ap.dateApplied)) 
            div(style='font: 12px/14px sans-serif; display:inline; position: relative; top: -10px;') Row: 
            
            input#rowprint(type='text' form='rentapform' value=(undefined===rownum? '' : rownum) readonly) 
            br 
            div(style='font: 12px/14px sans-serif; display:inline; position: relative; top: -10px;') ID: 
            input#rentapID(type='text' form='rentapform' value=(undefined===ap? '' : ap.rowid) readonly) 
            
          td
            label.smalllabelinput(for='guestdate') Guest 
            - var rentapDateGuested = undefined===ap ? '' : ap.dateGuested
            textarea#guestdate(cols='8' rows='2' form='rentapform')= rentapDateGuested

          td
            label.smalllabelinput(for='rentdate') Rented 
            - var rentapDateRented = undefined===ap? '' : ap.dateRented
            textarea#rentdate(cols='8' rows='2' form='rentapform')= rentapDateRented
            //-
            //- above is part of rentapform

          td#headercontrols 
            //- value of input#headername changes when select#changeHeadername changes
            input#headername.inline(type='text' value=(undefined===header ? '' : header.Name)) 
            //- res.render in controller will provide url: req.originalUrl along with ap.rowid etc. formaction needs to preserve the current route
            //- in order to keep displaying the same page as user changes header. the buttons just have one character on them (+, ~, -)
            //- except the default header button has this ->0
            button#saverheaderbutton.inline(title='Save New Header' formaction=url + "/header") +
            button#editheaderbutton.inline(title='Save Edited Header' formaction=url + "/header/save") ~
            button#delrheaderbutton.inline(title='Delete Header' formaction=url + "/header/delete") -
            //- seems like this is how to put the dropdown list on the page using Pug
            //- onchange... makes hidden input#rentapHeadername update to match whatever is selected
            //- and then submits the header form to update header (which includes input#headername above)
            //- (I can't figure out how I did it in the rentap extension though)
            if (headerNames)
              select#changeHeadername(name='selectedHeadername' onchange="changeInputHeadername(event)")
                each headerName in headerNames
                  option(value=headerName selected=(header.Name === headerName)) headerName
            button#defaultheaderbutton.inline(title='Set as default header shown on start' formaction=url + "/header/" + header_id + "/default") ->0

      //- below script defines changeInputHeadername(event) that is used in select#changeHeadername above to change 
      //- hidden input#rentapHeadername below and update the header
      script(type='text/javascript'). 
        //- e is the onchange event
        function changeInputHeadername(e) { 
          document.getElementById("rentapHeadername").value = e.target.value //this is needed to keep track of which header to use with each rentap
          rentapheader.submit() //- after changing those fields, submit header form so header can be updated to match selected header name
        }

    form#rentapform(method=POST action='') 
      //- this form should receive one rentap from 
      //- rentaps[{FullName, SSN, BirthDate, MaritalStatus, Email, StateID, Phone1, Phone2, CurrentAddress, PriorAddresses, ProposedOccupants, ProposedPets, Income, Employment, Evictions, Felonies, dateApplied, dateGuested, dateRented, headerName}, ...], 
      //- rowmode{row,mode} and the ap.rowid=tbl.rowid of the rentap to display

      //- For a new ap, ap.rowid rentap and rowmode will all be undefined

      //- hidden input below is set by changeInputHeadername above when select#changeHeadername is changed
      input#rentapHeadername(type='hidden' value='')
      table#rentapbody 
        tr 
          td 
            ul 
              li.section_header Personal Information

              li
                label.personalinfo(for='fullname') Full Name 
                input#fullname(type='text' value=(undefined===ap? '' : ap.FullName))

              li 
                label.personalinfo(for='ssnumber') Social Security Number 
                input#ssnumber(type='text' value=(undefined===ap? '' : ap.SSN))

              li 
                label.personalinfo(for='birthdate') Birth Date 
                input#birthdate(type='text' value=(undefined===ap? '' : ap.BirthDate))

              li 
                label.personalinfo(for='maritalstatus') Marital Status 
                input#maritalstatus(type='text' value=(undefined===ap? '' : ap.MaritalStatus))

              li 
                label.personalinfo(for='email') Email 
                input#email(type='text' value=(undefined===ap? '' : ap.Email))

              li 
                label.personalinfo(for='stateid') State ID# 
                input#stateid(type='text' value=(undefined===ap? '' : ap.StateID))

              li 
                label.personalinfo(for='phone1') Phone 1 
                input#phone1(type='text' value=(undefined===ap? '' : ap.Phone1))

              li 
                label.personalinfo(for='phone2') Phone 2 
                input#phone2(type='text' value=(undefined===ap? '' : ap.Phone2))

              li 
                - var ca = undefined===ap ? '' : ap.CurrentAddress
                label#currentaddresslabel(for='currentaddress') #[strong Current Address, City, State, Zip, Dates, Rent, Landlord name and phone number]...  
                textarea#currentaddress= ca

              li 
                - var pa = undefined===ap ? '' : ap.PriorAddresses
                label(for='previousaddresses') #[strong Prior Addresses, Cities, States, Zips, Dates, Rents, Landlords]...  
                textarea#previousaddresses= pa

          td 
            ul 
              li 
                - var po = undefined===ap ? '' : ap.ProposedOccupants
                label(for='occupants') #[strong Proposed Occupants: self+age, other+age]...  
                textarea#occupants= po

              li 
                - var pp = undefined===ap ? '' : ap.ProposedPets
                label(for='pets') #[<strong>Proposed Pets] 
                textarea#pets= pp

              li 
                - var inc = undefined===ap ? '' : ap.Income
                label(for='income') #[strong Income &amp Food Stamps] 
                textarea#income= inc

              li
                - var emp = undefined===ap ? '' : ap.Employment
                label(for='employment') #[strong Employment: address, job, dates, hours, supervisor name and phone number]... 
                textarea#employment= emp

          td
            ul
              li
                - var ev = undefined===ap ? '' : ap.Evictions
                label(for='evictions') #[strong Evictions Past 10 Years] 
                textarea#evictions= ev

              li
                - var fe = undefined===ap ? '' : ap.Felonies
                label(for='felonies') #[strong Felonies/Drug Convictions] 
                textarea#felonies= fe

          td#controls 
            ul 
              li 
                //- for save, just use the curren url for the action, for all the rest, override with formaction path
                //- and for those that need it, also overide POST with GET by using formmethod
                if (mode != 'discarded')
                  button#savebutton.inline Save 
                  button#newbutton.inline(formmethod=GET formaction='/rentap') New 
                  button#discardbutton.inline(formmethod=POST formaction='/rentap/discard/' + (undefined===ap ? '' : ap.rowid)) Discard
                  button#trashbutton.inline(formmethod=GET formaction='/rentap/show/' + (undefined==ap ? '' : ap.rowid) + '/trash') Trash
                else 
                  button#restorebutton.inline(formaction='/rentap/restore/' + (undefined==ap ? '' : ap.rowid) + '/trash') Restore
                  button#delrentapbutton.inline(formaction='/rentap/delete/' + (undefined==ap ? '' : ap.rowid) + '/trash') Delete
                  button#backbutton.inline(formmethod=GET formaction='/renatp/show/' + (undefined==ap ? '' : ap.rowid)) Back 

    //- decided a third form is needed here for these jump buttons so it will only post the necessary data for the jump
    //- i.e row and pattern (decided not to include jumping to a specific id here because user can just enter that
    //- in the url). Even though the result is to display an existing app, still need method=POST to get
    //- the data to the controller
    //- after posting a search and getting this page, have to pass Names [{ap.rowid, FullName},...]
    //- or if selecting a name from the dropdown list, go straight to the selectedAp_id as the default action
    form#rentapsearch(method=POST action='/rentap/showSelected') 
      //- prev and next don't need to send data from the form so using method GET
      button#prevbutton.inlinebutton(formmethod=GET formaction='/rentap/show/' + (undefined==ap ? '' : ap.rowid) + '/prev') Prev
      button#nextbutton.inlinebutton(formmethod=GET formaction='/rentap/show/' + (undefined==ap ? '' : ap.rowid) + '/next') Next

      label(for='row' style='text-align:right; font-weight: normal; margin-right: 1ch; vertical-align: middle') row
      input#row.inline(type='text' style='text-align: right;' value='' title='Jump to 0 to find printable instructions for applicants.')
      button#jumpbutton.inlinebutton(formaction='/rentap/show/' + (undefined==ap ? '' : ap.rowid) + '/jump') Go
      
      input#pattern(type='text' title='Hint: Use &quot; to search names only. For example, &quot;d, for names starting with D.' value='' )
      //- might need to just stay on the current ap.rowid so the action is /show/:ap.rowid/search
      //- and the pattern to search for is in the posted data (...body.pattern)
      //- this button will assume search is to be limited to goodaps or trashaps
      //- based on what the current ap is
      button#searchbutton.inlinebutton(formaction='/rentap/show/' + (undefined==ap ? '' : ap.rowid) + '/search' title='Click while empty to clear previous search and list all names.') Search
      //- I think the following will submit this form (form#rentapsearch) when a new name is selected, with selectedAp_id being one of the values submitted
      if (Names)
        select#listsearchmenu.inline(name='selectedAp_id' onchange='rentapsearch.submit()')
          each Name in Names
            option(value=Name.ap.rowid selected=(ap.rowid === Name.ap.rowid)) Name.FullName
