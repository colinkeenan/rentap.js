html(lang='en')
  //- trying to make this a general template that can be used as is or extended for many routes
  head
    title Rental Application
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='shortcut icon' href='/images/icon.png')
    link(rel='stylesheet' media='print' href='/stylesheets/rentap-print.css')
    link(rel='stylesheet' media='screen' href='/stylesheets/rentap-screen.css')
  body

    //- action='' in the form definition below means use the current url for the POST action
    //- So, if url is /rentap, the new ap would be saved (if it had anything on it), and
    //- if url is /rentap/show/5, the 5th rentap (which would be the one displayed) 
    //- would be saved (if it had been edited) 
    //- 
    //- However, I've discovered buttons (which are of type submit by default) can have
    //- formaction='' where the path is specified for that button and that will overide
    //- the action=''. Same can be done with method, a button can be set to method=GET
    //- to overide the form method of POST. So, that's how I'll handle it and there will 
    //- be multiple buttons on the form as it was in the rentap firefox extension

    //- Unlike rentap firefox extension, trying to break this into 2 forms, one for header
    //- and another for the application data
    form#headerform(method=POST action='') 
      table#rentapheader 
        tr 
          td 
            img(src='/images/icon.png')

          td 
            input#rentaladdress(type='text' value='enter rental address') 
            input#rentalcitystzip(type='text' value='enter city, state, zip')

          td#tdrtitle 
            input.inlineshort#mode(type='text' value='' readonly) 
            input#rtitle(type='text' value='enter title')

          td 
            label.smalllabelinputApplied(for='authdate') Applied 
            input#authdate(type='text' value='' ) 
            div(style='font: 12px/14px sans-serif; display:inline; position: relative; top: -10px;') Row: 
            input#rowprint(type='text' value='' readonly) 
            br 
            div(style='font: 12px/14px sans-serif; display:inline; position: relative; top: -10px;') ID: 
            input#rentapID(type='text' id='' value='' readonly) 
            
          td 
            label.smalllabelinputGuest(for='guestdate') Guest 
            textarea#guestdate(cols='8' rows='2') 

          td 
            label.smalllabelinputRented(for='rentdate') Rented 
            textarea#rentdate(cols='8' rows='2')

          td#headercontrols 
            input#headername.inline(type='text') 
            //- res.render in controller will provide url: req.originalUrl along with ap_id etc. formaction needs to preserve the current route
            //- in order to keep displaying the same page as user changes header. the buttons just have one character on them (+, ~, -)
            //- except the default header button has this ->0
            button#saverheaderbutton.inline(title='Save New Header' formaction=url + "/header") +
            button#editheaderbutton.inline(title='Save Edited Header' formaction=url + "/header/" + header_id) ~
            button#delrheaderbutton.inline(title='Delete Header' formaction=url + "/header/" + header_id + "/delete") -
            //- This is where the script below puts the dropdown menu, but not sure it will work this way in nodejs/pug
            div#listheadermenu.inline 
            button#defaultheaderbutton.inline(title='Set as default header shown on start' formaction=url + "/header/" + header_id + "/default") ->0

            script(type='text/javascript') 
              //- This probably should be done a different way using pug and nodejs/sqlite3
              var sel = document.createElement('select'); 
              var opt0 = document.createElement('option'); 
              opt0.text = 'Choose Header'; 
              sel.add(opt0, null); 
              document.getElementById('listheadermenu').appendChild(sel); //- put the dropdown menu list on the page

    form#rentapform(method=POST action='') 
      table#rentapbody 
        tr 
          td 
            ul 
              li.section_header 
                #[strong Personal Information]

              li
                label.personalinfo(for='fullname') Full Name 
                input#fullname(type='text' value='')

              li 
                label.personalinfo(for='ssnumber') Social Security Number 
                input#ssnumber(type='text' value='')

              li 
                label.personalinfo(for='birthdate') Birth Date 
                input#birthdate(type='text' value='')

              li 
                label.personalinfo(for='maritalstatus') Marital Status 
                input#maritalstatus(type='text' value='')

              li 
                label.personalinfol(for='email') Email 
                input#email(type='text' value='')

              li 
                label.personalinfol(for='stateid') State ID# 
                input#stateid(type='text' value='')

              li 
                label.personalinfol(for='phone1') Phone 1 
                input#phone1(type='text' value='')

              li 
                label.personalinfo(for='phone2')Phone 2 
                input(type='text' id='phone2' value='' )

              li 
                label#currentaddresslabel(for='currentaddress') #[strong Current Address, City, State, Zip, Dates, Rent, Landlord name and phone number]...  
                textarea#currentaddress

              li 
                label(for='previousaddresses') #[strong Prior Addresses, Cities, States, Zips, Dates, Rents, Landlords]...  
                textarea#previousaddresses

          td 
            ul 
              li 
                label(for='occupants') #[strong Proposed Occupants: self+age, other+age]...  
                textarea#occupants

              li 
                label(for='pets') #[<strong>Proposed Pets] 
                textarea#pets

              li 
                label(for='income') #[strong Income &amp Food Stamps] 
                textarea#income

              li
                label(for='employment') #[strong Employment: address, job, dates, hours, supervisor name and phone number]... 
                textarea#employment

          td
            ul
              li
                label(for='evictions') #[strong Evictions Past 10 Years] 
                textarea#evictions

              li
                label(for='felonies') #[strong Felonies/Drug Convictions] 
                textarea#felonies

          td#controls 
            ul 
              li 
                //- for save, just use the curren url for the action, for all the rest, override with formaction path
                //- and for those that need it, also overide POST with GET by using formmethod
                button#savebutton.inline Save
                button#restorebutton.inline(formaction='/restore/' + ap_id + '/trash' style='padding-left:20px') Restore
                button#newbutton.inline(formmethod=GET formaction='/' style='padding-left:20px') New
                button#discardbutton.inline(formaction='/discard/' + ap_id style='padding-left:20px') Discard
                button#delrentapbutton.inline(formaction='/delete/' + ap_id + '/trash'  style='padding-left:20px') Delete
                button#trashbutton.inline(formmethod=GET formaction='/show/' + ap_id + '/trash' style='padding-left:20px') Trash
                button#backbutton.inline(formmethod=GET formaction='/show/' + back_ap_id style='padding-left:20px') Back 

              li
                div(style='padding:14px') 
                  label(for='rownumber' style='min-width:125px; text-align:right; position:relative; top:+16px;') -  row  - 
                  label(for='idnumber' style='min-width:78px; text-align:right; position:relative; top:+16px;') -  ID  -

              li
                div#prevbutton.inline
                  input#prevbutton.inlinebutton(type='button' onClick='javascript:prevButton();' value='Prev')
                  input#nextbutton.inlinebutton(type='button' onClick='javascript:nextButton();' value='Next')
                  input#row.inline(type='text' style='text-align: right;' value='')
                  input#rownumber.inline(type='text' onfocus='javascript:setClickButton('row')' onkeydown='return processKey(event)' title='Jump to 0 to find printable instructions for applicants.' value='')
                  input#id.inline(type='text' style='text-align: right;' value='')
                  input#idnumber.inline(type='text' onfocus='javascript:setClickButton('id')' onkeydown='return processKey(event)' title='Jump to 0 to find printable instructions for applicants.' value='')
                  input#jumpbutton.inlinebutton(type='button' onClick='javascript:jumpButton();' value='Go')
                  input#findname(type='text' onfocus='javascript:setClickButton('search')' onkeydown='return processKey(event)' title='Hint: Use &quot; to search names only. For example, &quot;d, for names starting with D.' value='' )
                  input#searchbutton.inlinebutton(type='button' onClick='javascript:searchButton();' value='Search' title='Click while empty to clear previous search and list all names.')
                  div#listsearchmenu.inline

                    li
                      div(style='padding:8px')

                        li
                          #[strong Printing] Either ctrl-p or (Hamburger Menu)->Print... Set #[em Page Setup, Paper Orientation]
                   to #[strong Landscape]. Experiment with Scale. Set #[em Options, headers and footers] to what you want.

               li
                 input#toggleBordersButton.inlinewidebutton'(type='button' onClick='javascript:toggleBorders();' value='Toggle Borders')

      script(type='text/javascript')
        trashButton(); // if not already viewing a discard, put trash button on page to view discards
          backButton();  // if viewing a discard, put back button on page to get back to non-discarded rentaps
         var searchSel = document.createElement('select');
         var chooseName = document.createElement('option');
         chooseName.text = 'Choose Name';
         searchSel.add(chooseName, null);
         document.getElementById('listsearchmenu').appendChild(searchSel); //put the dropdown menu list on the page
