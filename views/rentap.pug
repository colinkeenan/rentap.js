html(lang='en')
  head
    title Rental Application
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    link(rel='shortcut icon' href='/images/icon.png')
    link(rel='stylesheet' media='print' href='/stylesheets/rentap-print.css')
    link(rel='stylesheet' media='screen' href='/stylesheets/rentap-screen.css')
  body

    //- action='' in the form definitions below means use the current url for the POST action
    //- 
    //- However, I've discovered buttons (which are of type submit by default) can have
    //- formaction='/path' where the path is specified for that button and that will overide
    //- the action=''. Same can be done with method, a button can be set to method=GET
    //- to overide the form method of POST. That's how there will be multiple buttons 
    //- on each form as it was in the rentap firefox extension

    //- Unlike rentap firefox extension, trying to break this into 3 forms, header
    //- rentap, and rentapjump (navigation controls form)
    form#headerform(method=POST action='') 
      //- the model has access to headers table as headers[{StreetAddress, CityStateZip, Title, Name}, etc.]
      //- headerform expects the following variables from get headerid, (header will be undefined for get new header) 
      
      //- header: {StreetAddress, CityStateZip, Title, Name}, headerNames[name1,...], header_id, ap_mode, 
      //- and *still need to figure out dates and row variables*

      //- where header is headers[headerID] and 
      //- headerID comes from rentaps[ap_id] -- the get will happen when getting rentaps[ap_id]
      table#rentapheader 
        tr 
          td 
            img(src='/images/icon.png')

          td 
            input#rentaladdress(type='text' value=(undefined===header ? 'enter rental address' : header.StreetAddress)) 
            input#rentalcitystzip(type='text' value=(undefined===header ? 'enter city, state, zip' : header.CityStateZip))

          td#tdrtitle 
            input#mode.inlineshort(type='text' value=ap_mode readonly) 
            input#rtitle(type='text' value=(undefined===header ? 'enter title' : header.Title))

          td 
            //- below is part of rentapform so gets ap_id and rentap {... dateApplied, dateGuested, dateRented, headerID} when there's a get for rentapform
            //-
            label.smalllabelinput(for='authdate') Applied 
            input#authdate(type='text' form='rentapform' value=(undefined===rentap? '' : rentap.dateApplied)) 
            div(style='font: 12px/14px sans-serif; display:inline; position: relative; top: -10px;') Row: 
            //- need some sort of function to calculate the row
            input#rowprint(type='text' form='rentapform' readonly) 
            br 
            div(style='font: 12px/14px sans-serif; display:inline; position: relative; top: -10px;') ID: 
            input#rentapID(type='text' id=''  form='rentapform' value=ap_id readonly) 
            
          td 
            label.smalllabelinputGuest(for='guestdate') Guest 
            - var rentapDateGuested = undefined===rentap? '' : rentap.dateGuested
            textarea#guestdate(cols='8' rows='2' form='rentapform')= rentapDateGuested

          td 
            label.smalllabelinputRented(for='rentdate') Rented 
            - var rentapDateRented = undefined===rentap? '' : rentap.dateGuested
            textarea#rentdate(cols='8' rows='2' form='rentapform')= rentapDateRented
            //-
            //- above is part of rentapform

          td#headercontrols 
            //- value of input#headername changes when select#changeHeadername changes
            input#headername.inline(type='text' value=(undefined===header ? '' : header.Name)) 
            //- res.render in controller will provide url: req.originalUrl along with ap_id etc. formaction needs to preserve the current route
            //- in order to keep displaying the same page as user changes header. the buttons just have one character on them (+, ~, -)
            //- except the default header button has this ->0
            button#saverheaderbutton.inline(title='Save New Header' formaction=url + "/header") +
            button#editheaderbutton.inline(title='Save Edited Header' formaction=url + "/header/save") ~
            button#delrheaderbutton.inline(title='Delete Header' formaction=url + "/header/delete") -
            //- seems like this is how to put the dropdown list on the page using Pug
            //- onchange... makes input#headername update to match whatever is selected
            //- I can't figure out how I did it in the rentap extension though
            select#changeHeadername(onchange="changeInputHeadername(event)")
              each headerName in headerNames
                option(value=headerName selected=(header.Name === headerName)) headerName
            button#defaultheaderbutton.inline(title='Set as default header shown on start' formaction=url + "/header/" + header_id + "/default") ->0

      //- below script defines changeInputHeadername(event) that is used in select#changeHeadername above to change input#headername above
      //- and also a hidden input#rentapHeadername below
      script(type='text/javascript') 
        function changeInputHeadername(e) { 
          document.getElementById("headername").value = e.target.value
          document.getElementById("rentapHeadername").value = e.target.value
        }

    form#rentapform(method=POST action='') 
      //- this form should receive one rentap from 
      //- rentaps[{FullName, SSN, BirthDate, MaritalStatus, Email, StateID, Phone1, Phone2, CurrentAddress, PriorAddresses, ProposedOccupants, ProposedPets, Income, Employment, Evictions, Felonies, dateApplied, dateGuested, dateRented, headerID}, ...] 
      //- and the ap_id=rowid of the rentap to display
      //- For a new ap, rentap will be undefined
      //- hidden input below is set by changeInputHeadername above when select#changeHeadername is changed
      input#rentapHeadername(type='hidden' value='');
      table#rentapbody 
        tr 
          td 
            ul 
              li.section_header#[strong Personal Information]

              li
                label.personalinfo(for='fullname') Full Name 
                input#fullname(type='text' value=(undefined===rentap? '' : rentap.FullName))

              li 
                label.personalinfo(for='ssnumber') Social Security Number 
                input#ssnumber(type='text' value=(undefined===rentap? '' : rentap.SSN))

              li 
                label.personalinfo(for='birthdate') Birth Date 
                input#birthdate(type='text' value=(undefined===rentap? '' : rentap.BirthDate))

              li 
                label.personalinfo(for='maritalstatus') Marital Status 
                input#maritalstatus(type='text' value=(undefined===rentap? '' : rentap.MaritalStatus))

              li 
                label.personalinfol(for='email') Email 
                input#email(type='text' value=(undefined===rentap? '' : rentap.Email))

              li 
                label.personalinfol(for='stateid') State ID# 
                input#stateid(type='text' value=(undefined===rentap? '' : rentap.StateID))

              li 
                label.personalinfol(for='phone1') Phone 1 
                input#phone1(type='text' value=(undefined===rentap? '' : rentap.Phone1))

              li 
                label.personalinfo(for='phone2')Phone 2 
                input(type='text' id='phone2' value=(undefined===rentap? '' : rentap.Phone2))

              li 
                - var ca = undefined===rentap ? '' : rentap.CurrentAddress
                label#currentaddresslabel(for='currentaddress') #[strong Current Address, City, State, Zip, Dates, Rent, Landlord name and phone number]...  
                textarea#currentaddress= ca

              li 
                - var pa = undefined===rentap ? '' : rentap.PriorAddresses
                label(for='previousaddresses') #[strong Prior Addresses, Cities, States, Zips, Dates, Rents, Landlords]...  
                textarea#previousaddresses= pa

          td 
            ul 
              li 
                - var po = undefined===rentap ? '' : rentap.ProposedOccupants
                label(for='occupants') #[strong Proposed Occupants: self+age, other+age]...  
                textarea#occupants= po

              li 
                - var pp = undefined===rentap ? '' : rentap.ProposedPets
                label(for='pets') #[<strong>Proposed Pets] 
                textarea#pets= pp

              li 
                - var inc = undefined===rentap ? '' : rentap.Income
                label(for='income') #[strong Income &amp Food Stamps] 
                textarea#income= inc

              li
                - var emp = undefined===rentap ? '' : rentap.Employment
                label(for='employment') #[strong Employment: address, job, dates, hours, supervisor name and phone number]... 
                textarea#employment= emp

          td
            ul
              li
                - var ev = undefined===rentap ? '' : rentap.Evictions
                label(for='evictions') #[strong Evictions Past 10 Years] 
                textarea#evictions= ev

              li
                - var fe = undefined===rentap ? '' : rentap.Felonies
                label(for='felonies') #[strong Felonies/Drug Convictions] 
                textarea#felonies= fe

          td#controls 
            ul 
              li 
                //- for save, just use the curren url for the action, for all the rest, override with formaction path
                //- and for those that need it, also overide POST with GET by using formmethod
                if (url === '/rentap' || url === '/rentap/show/' + ap_id) 
                  button#savebutton.inline Save 
                  button#newbutton.inline(formmethod=GET formaction='/' style='padding-left:20px') New 
                  button#discardbutton.inline(formaction='/discard/' + ap_id style='padding-left:20px') Discard
                  button#trashbutton.inline(formmethod=GET formaction='/show/' + ap_id + '/trash' style='padding-left:20px') Trash
                else 
                  button#restorebutton.inline(formaction='/restore/' + ap_id + '/trash' style='padding-left:20px') Restore
                  button#delrentapbutton.inline(formaction='/delete/' + ap_id + '/trash'  style='padding-left:20px') Delete
                  button#backbutton.inline(formmethod=GET formaction='/show/' + back_ap_id style='padding-left:20px') Back 

    //- decided a third form is needed here for these jump buttons so it will only post the necessary data for the jump
    //- i.e row and findname (decided not to include jumping to a specific id here because user can just enter that
    //- in the url). Even thought the result is to display an existing app, still need method=POST to get
    //- the data to the controller
    //- after posting a search and getting this page, have to pass Names array
    form#rentapjump(method=POST action='') 
      //- prev and next don't need to send data from the form so using method GET
      button#prevbutton.inlinebutton(formmethod=GET formaction='/show/' + ap_id + '/prev') Prev
      button#nextbutton.inlinebutton(formmethod=GET formaction='/show/' + ap_id + '/next') Next

      label(for='row' style='min-width:125px; text-align:right; position:relative; top:+16px;') row
      input#row.inline(type='text' style='text-align: right;' value='' title='Jump to 0 to find printable instructions for applicants.')
      button#jumpbutton.inlinebutton(formaction='/show/' + ap_id + '/jump') Go
      
      input#findname(type='text' title='Hint: Use &quot; to search names only. For example, &quot;d, for names starting with D.' value='' )
      //- the search action is /find/:pattern/good or find/:pattern/trash
      //- and also have actions for more restrictive search by column,
      //- but have to POST the search data from this form before those can be constructed
      //- and might need to just stay on the current ap_id so the action is /show/:ap_id/search
      button#searchbutton.inlinebutton(formaction='show/' + ap_id + '/search' title='Click while empty to clear previous search and list all names.') Search
      //- need selecting somthing here to submit action show/ap_id, not sure how at the moment
      select#listsearchmenu.inline()
        each Name in Names
          option(value=Name selected=(rentap.FullName === Name)) Name
